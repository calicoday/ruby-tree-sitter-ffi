c_name: :ts_query_capture_name_for_id, args: [TreeSitterFFI::Query, :uint32, :uint32_p], returns: :string
=== vers: 0.0.4
./gen/rusty/rusty_node_test.rb
11: ok
12: ok
13: ok
14: ok
15: ok
16: ok
17: ok
27: ok
28: ok
29: ok
30: ok
31: ok
32: ok
33: ok
35: ok
36: ok
37: ok
38: ok
39: ok
40: ok
41: ok
43: ok
44: ok
48: ok
49: ok
51: ok
52: ok
56: ok
57: ok
59: ok
60: ok
61: ok
63: ok
68: ok
69: ok
70: ok
72: ok
73: ok
74: ok
76: ok
77: ok
78: ok
79: ok
81: ok
86: ok
87: ok
88: ok
90: ok
91: ok
92: ok
94: ok
98: ok
102: ok
103: ok
105: ok
106: ok
107: ok
108: ok
110: ok
111: ok
112: ok
113: ok
114: ok
115: ok
116: ok
117: ok
189: ok
193: ok
208: ok
209: ok
213: ok
218: ok
231: ok
232: ok
246: ok
247: ok
248: ok
252: ok
253: ok
255: ok
256: ok
257: ok
261: ok
262: ok
264: ok
265: ok
266: ok
267: ok
269: ok
272: ok
273: ok
274: ok
275: ok
276: ok
281: ok
282: ok
284: ok
288: ok
292: ok
293: ok
295: ok
296: ok
297: ok
298: ok
300: ok
301: ok
302: ok
303: ok
304: ok
305: ok
306: ok
307: ok
339: ok
340: ok
341: ok
342: ok
343: ok
348: ok
349: ok
350: ok
351: ok
352: ok
358: ok
359: ok
360: ok
361: ok
362: ok
367: ok
368: ok
369: ok
370: ok
371: ok
377: ok
378: ok
379: ok
380: ok
381: ok
386: ok
387: ok
388: ok
389: ok
390: ok
396: ok
397: ok
398: ok
399: ok
400: ok
405: ok
406: ok
407: ok
408: ok
409: ok
414: ok
415: ok
416: ok
417: ok
418: ok
420: ok
425: ok
426: ok
427: ok
428: ok
429: ok
473: ok
474: ok
475: ok
476: ok
487: ok
488: ok
489: ok
490: ok
491: ok
492: ok
696: ok
702: ok
708: ok
709: ok
718: ok
724: ok
729: ok
732: ok
733: ok
===
total asserts: 182
  ok: 182
  failed: 0

./gen/rusty/rusty_tree_test.rb
13: ok
35: ok
36: ok
37: ok
38: ok
39: ok
40: ok
41: ok
42: ok
43: ok
63: ok
64: ok
65: ok
66: ok
67: ok
68: ok
69: ok
70: ok
71: ok
91: ok
92: ok
93: ok
94: ok
95: ok
96: ok
97: ok
98: ok
99: ok
119: ok
120: ok
121: ok
122: ok
123: ok
124: ok
125: ok
126: ok
127: ok
148: ok
149: ok
150: ok
151: ok
152: ok
153: ok
154: ok
155: ok
156: ok
157: ok
158: ok
159: ok
180: ok
181: ok
182: ok
183: ok
184: ok
185: ok
186: ok
187: ok
188: ok
208: ok
210: ok
211: ok
213: ok
214: ok
215: ok
217: ok
218: ok
219: ok
221: ok
222: ok
223: ok
234: ok
237: ok
238: ok
241: ok
242: ok
245: ok
246: ok
249: ok
250: ok
253: ok
254: ok
257: ok
258: ok
274: ok
276: ok
277: ok
278: ok
281: ok
282: ok
285: ok
286: ok
287: ok
291: ok
294: ok
295: ok
301: ok
302: ok
306: ok
309: ok
310: ok
314: ok
315: ok
316: ok
320: ok
323: ok
324: ok
328: ok
331: ok
332: ok
336: ok
337: ok
338: ok
342: ok
345: ok
346: ok
350: ok
351: ok
352: ok
356: ok
359: ok
360: ok
372: ok
373: ok
374: ok
===
total asserts: 124
  ok: 124
  failed: 0

./gen/rusty/rusty_query_test.rb
11: ok
12: ok
19: ok
27: ok
39: ok
48: ok
59: ok
69: ok
78: ok
87: ok
96: ok
107: ok
119: ok
130: ok
146: ok
156: ok
166: ok
176: ok
186: ok
196: ok
206: ok
268: ok
290: ok
306: ok
329: ok
351: ok
365: ok
386: failed
  result: <QueryError row: 0, column: 26, offset: 26, message: "_expression", kind: :node_type>
  expect: <QueryError row: 0, column: 14, offset: 14, message: "(if_statement condition: (_expression))\n              ^", kind: :structure>
409: ok
434: ok
458: ok
501: ok
534: ok
564: ok
658: ok
678: ok
727: ok
752: ok
769: ok
809: ok
832: ok
869: ok
917: ok
949: ok
985: failed
  result: []
  expect: [[0, [["doc", "# four"], ["doc", "# five"], ["doc", "# six"], ["name", "B"]]], [1, [["doc", "# eight"], ["name", "d"]]]]
1028: ok
1052: failed
  result: []
  expect: [[0, [["doc", "# a"], ["doc", "// b"], ["doc", "// c"]]], [0, [["doc", "# e"]]]]
1077: ok
1101: ok
1182: ok
1213: failed
  result: [[0, [["name", "a"]]], [0, [["name", "c"]]], [0, [["name", "e"]]]]
  expect: [[0, [["name", "a"]]], [0, [["name", "c"]]], [0, [["doc", "# four"], ["doc", "// five"], ["name", "e"]]]]
1262: ok
1264: ok
1299: ok
1334: ok
1361: ok
1403: ok
1436: ok
1473: ok
1501: ok
1535: ok
1634: ok
1666: ok
1706: failed
  result: [[0, [["element", "a"]]], [0, [["element", "b"]]]]
  expect: [[0, [["element", "a"]]], [0, [["element", "b"]]], [0, [["element", "c"]]]]
1720: ok
1734: ok
1827: ok
1863: ok
1879: ok
2010: ok
2016: ok
2026: ok
2184: ok
2209: failed
  result: [[0, [["field", "a"]]]]
  expect: [[0, [["field", "a"]]], [0, [["field", "b"]]], [0, [["field", "c"]]]]
2255: failed
  result: [[3, [["super_call", "a(1)"], ["fn", "a"]]], [0, [["func", "a"], ["args", "(1)"]]], [0, [["func", "a(1).b"], ["args", "(2)"]]], [1, [["receiver", "a(1)"], ["method", "b"]]], [0, [["func", "a(1).b(2).c"], ["args", "(3)"]]], [1, [["receiver", "a(1).b(2)"], ["method", "c"]]], [0, [["func", "a(1).b(2).c(3).d"], ["args", "(4)"]]], [1, [["receiver", "a(1).b(2).c(3)"], ["method", "d"]]], [0, [["func", "a(1).b(2).c(3).d(4).e"], ["args", "(5)"]]], [1, [["receiver", "a(1).b(2).c(3).d(4)"], ["method", "e"]]], [0, [["func", "a(1).b(2).c(3).d(4).e(5).f"], ["args", "(6)"]]], [1, [["receiver", "a(1).b(2).c(3).d(4).e(5)"], ["method", "f"]]], [0, [["func", "a(1).b(2).c(3).d(4).e(5).f(6).g"], ["args", "(7)"]]], [1, [["receiver", "a(1).b(2).c(3).d(4).e(5).f(6)"], ["method", "g"]]], [0, [["func", "a(1).b(2).c(3).d(4).e(5).f(6).g(7).h"], ["args", "(8)"]]], [1, [["receiver", "a(1).b(2).c(3).d(4).e(5).f(6).g(7)"], ["method", "h"]]]]
  expect: [[0, [["func", "a"], ["args", "(1)"]]], [0, [["func", "a(1).b"], ["args", "(2)"]]], [1, [["receiver", "a(1)"], ["method", "b"]]], [0, [["func", "a(1).b(2).c"], ["args", "(3)"]]], [1, [["receiver", "a(1).b(2)"], ["method", "c"]]], [0, [["func", "a(1).b(2).c(3).d"], ["args", "(4)"]]], [1, [["receiver", "a(1).b(2).c(3)"], ["method", "d"]]], [0, [["func", "a(1).b(2).c(3).d(4).e"], ["args", "(5)"]]], [1, [["receiver", "a(1).b(2).c(3).d(4)"], ["method", "e"]]], [0, [["func", "a(1).b(2).c(3).d(4).e(5).f"], ["args", "(6)"]]], [1, [["receiver", "a(1).b(2).c(3).d(4).e(5)"], ["method", "f"]]], [0, [["func", "a(1).b(2).c(3).d(4).e(5).f(6).g"], ["args", "(7)"]]], [1, [["receiver", "a(1).b(2).c(3).d(4).e(5).f(6)"], ["method", "g"]]], [0, [["func", "a(1).b(2).c(3).d(4).e(5).f(6).g(7).h"], ["args", "(8)"]]], [1, [["receiver", "a(1).b(2).c(3).d(4).e(5).f(6).g(7)"], ["method", "h"]]]]
2331: ok
2398: ok
2413: ok
2468: failed
  result: [["constant", "toad"], ["constructor", "toad"], ["function.builtin", "toad"], ["variable", "toad"], ["constant", "load"], ["constructor", "load"], ["function.builtin", "load"], ["variable", "load"], ["constant", "panda"], ["constructor", "panda"], ["function.builtin", "panda"], ["variable", "panda"], ["constant", "lambda"], ["constructor", "lambda"], ["function.builtin", "lambda"], ["variable", "lambda"], ["constant", "ab"], ["constructor", "ab"], ["function.builtin", "ab"], ["variable", "ab"], ["constant", "require"], ["constructor", "require"], ["function.builtin", "require"], ["variable", "require"], ["constant", "Cd"], ["constructor", "Cd"], ["function.builtin", "Cd"], ["variable", "Cd"], ["constant", "EF"], ["constructor", "EF"], ["function.builtin", "EF"], ["variable", "EF"]]
  expect: [["variable", "toad"], ["variable", "panda"], ["variable", "ab"], ["function.builtin", "require"], ["variable", "require"], ["constructor", "Cd"], ["variable", "Cd"], ["constant", "EF"], ["constructor", "EF"], ["variable", "EF"]]
2605: ok
2807: failed
  result: [["template-call", "b.c0().d0 `ðŸ˜„`;\n "], ["method-name", "c0"], ["method-name", "d0"], ["template-tag", "d0"]]
  expect: [["template-call", "b.c0().d0 `ðŸ˜„`"], ["method-name", "c0"], ["method-name", "d0"], ["template-tag", "d0"]]
2816: failed
  result: [["method-name", ".f"]]
  expect: [["template-call", "b.c9().d9 `ðŸ˜„`"], ["method-name", "c9"], ["method-name", "d9"], ["template-tag", "d9"]]
2825: failed
  result: nil
  expect: [["method-name", "e"], ["method-name", "f"]]
3105: ok
3106: ok
3107: ok
3231: ok
3265: ok
3297: ok
===
total asserts: 89
  ok: 78
  failed: 11
  ["386", "985", "1052", "1213", "1706", "2209", "2255", "2468", "2807", "2816", "2825"]

done.
